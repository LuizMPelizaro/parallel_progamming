cmake_minimum_required(VERSION 3.18)
project(parallel_programming)

set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -mconsole")


#add_executable(parallel_programming
#        main.cpp
#        src/exemple/handle_join_example/thread_guard.h
#        src/exemple/handle_join_example/handle_join.h
#        src/exemple/join_threads.h
#        src/exemple/join_threads.h
#        src/exemple/join_and_detach.h
#        src/exemple/initial_exampel_thread.h
#)

#add_executable(exercise2
#        src/exercises/exercise_2/crew_mebers.cpp
#        src/exercises/exercise_2/crew_mebers.h
#)

#add_executable(parameters_threads
#        src/exemple/parameters_threads/constructor_thread.cpp
#        src/exemple/parameters_threads/problems_reference.cpp
#        src/exemple/parameters_threads/tranferring_ownership_thread.cpp
#        src/exemple/parameters_threads/utilis_methods_threads.cpp)

#add_executable(exercise3
#        src/exercises/exercise_3/workqueue.cpp
#        src/exercises/exercise_3/workqueue.h
#)

#add_executable(parallle_accumulate
#        src/exemple/parallel_accumulate/parallel_accumulate.cpp
#)

#add_executable(hello_mutex
#        src/exemple/hello_mutex/hello_mutex.cpp
#        src/exemple/hello_mutex/hello_mutex.h
#        src/exemple/hello_mutex/mutex_lock_guard.h
#)

#add_executable(stack_implementation
#        src/exercises/stack_implementetion/stack_thread_safe.h
#        src/exercises/stack_implementetion/stack_thread_safe.cpp
#)

#add_executable(bank_account
##        src/exemple/deadlock/bank_account.cpp
#        src/exemple/deadlock/bank_account.h
#        src/exemple/deadlock/deadlock_exemple.cpp
#)